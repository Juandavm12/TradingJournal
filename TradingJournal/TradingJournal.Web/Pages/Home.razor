@page "/"
@inject IRepository Repository

<PageTitle>Home</PageTitle>

<h1><p style="text-align: center;">WELCOME TO TRADING JOURNAL</p></h1>


<h3><i class="bi bi-coin" /> TOP 100 Coins</h3>


<div class="card">
    <div class="card-header">
    </div>


    <div class="card-body">

        <GenericList MyList="coinList">

            <Body>
                <table class="table table-striped">
                    <thead>
                        <tr>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>

                            <td>
                                <b>Rank</b>
                            </td>
                            <td>
                                <b>Symbol</b>
                            </td>
                            <td>
                                <b>Name</b>
                            </td>
                            <td>
                                <b>Type</b>
                            </td>

                            <td>
                                <b>Actions</b>
                            </td>

                        </tr>
                        @foreach (var coin in coinList!)
                        {

                            <tr>
                                <td>
                                    @coin.Rank
                                </td>
                                <td>
                                    @coin.Symbol
                                </td>
                                <td>
                                    @coin.Name
                                </td>
                                <td>
                                    @coin.Type
                                </td>

                                <td>
                                    <a @onclick=@(() => ShowModal(coin.Id, true)) class="btn btn-outline-info ">Info <i class="bi bi-pencil-square"></i></a>

                                </td>

                            </tr>
                        }


                    </tbody>
                </table>

            </Body>

        </GenericList>
    </div>
</div>



@code {

    [CascadingParameter]
    IModalService Modal { get; set; } = default!;

    private async Task ShowModal(string id = "", bool isEdit = false)

    {
        IModalReference modalReference;
        modalReference = Modal.Show<Coins.Info>(string.Empty, new ModalParameters().Add("id", id));

        var result = await modalReference.Result;
        if (result.Confirmed)
        {
            await Charging();
        }
    }

    private List<CoinpaprikaAPI.Entity.CoinInfo> coinList = new List<CoinpaprikaAPI.Entity.CoinInfo>();


    protected async override Task OnInitializedAsync()
    {
        await Charging();
    }





    private async Task Charging()
    {

        var responseHppt = await Repository.GetAsync<List<CoinpaprikaAPI.Entity.CoinInfo>>("api/coins");

        coinList = responseHppt.Response!;



    }



}
