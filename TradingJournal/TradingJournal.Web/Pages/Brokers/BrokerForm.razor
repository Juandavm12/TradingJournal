@inject IRepository Repository
@attribute [Authorize(Roles = "Admin")]

<EditForm Model="Broker" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-floating mb-3">
        <InputText class="form-control" id="floatingInput" placeholder="Name" @bind-Value="@Broker.Name" />
        <label for="floatingInput">Name:</label>
        <ValidationMessage For="@(() => Broker.Name)" />
    </div>

    <div class="form-floating mb-3">
        <InputText class="form-control" id="floatingInput2" placeholder="Address" @bind-Value="@Broker.Address" />
        <label for="floatingInput2">Address:</label>
        <ValidationMessage For="@(() => Broker.Address)" />
    </div>


    <div class="form-floating mb-3">
        <InputText class="form-control" id="floatingInput3" placeholder="Phone" @bind-Value="@Broker.Phone" />
        <label for="floatingInput3">Phone:</label>
        <ValidationMessage For="@(() => Broker.Phone)" />
    </div>

    <div class="form-floating mb-3">
        <InputText class="form-control" id="floatingInput3" placeholder="License Number" @bind-Value="@Broker.LicenseNumber" />
        <label for="floatingInput3">License Number:</label>
        <ValidationMessage For="@(() => Broker.LicenseNumber)" />
    </div>    


    <button class="btn btn-dark" type="submit">Save <i class="bi bi-floppy2"></i></button>
    <button class="btn btn-info" type="reset">Clean <i class="bi bi-x-octagon"></i></button>
    <button class="btn btn-secondary" @onclick="ReturnAction">Return <i class="bi bi-arrow-clockwise"></i></button>
</EditForm>

@code {

    [EditorRequired]
    [Parameter]
    public Broker Broker { get; set; }


    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }


    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }


}