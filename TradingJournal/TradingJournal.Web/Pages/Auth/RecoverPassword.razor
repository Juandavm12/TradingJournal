@page "/RecoverPassword"

@inject IRepository repository

@inject SweetAlertService sweetAlertService

@inject NavigationManager navigationManager

@if (loading)

{

<div class="spinner" />

}

<div class="row">

<div class="col-6">

<EditForm Model="emailDTO" OnValidSubmit="SendRecoverPasswordEmailTokenAsync">

<DataAnnotationsValidator />

<div class="card">

<div class="card-header">

<span>

                        <i class="bi bi-key" /> Send Password Recovery Email

<button class="btn btn-sm btn-primary float-end mx-2" type="submit"><i class="bi bi-loop-square" /> Send</button>

</span>

</div>

<div class="card-body">


                    <div class="mb-3">
                        <label>Email :</label>
                        <div>
                            <InputText class="form-control" @bind-Value="@emailDTO.Email" />
                            <ValidationMessage For="@(() => emailDTO.Email)" />
                        </div>
                    </div>



</div>

</div>

</EditForm>

</div>

</div>

@code {

private EmailDto emailDTO = new();

private bool loading;

private async Task SendRecoverPasswordEmailTokenAsync()

{

loading = true;

var responseHttp = await repository.PostAsync("/api/accounts/RecoverPassword", emailDTO);

if (responseHttp.Error)

{

var message = await responseHttp.GetErrorMessageAsync();

await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);

loading = false;

return;

}

loading = false;

        await sweetAlertService.FireAsync("Confirm", "An email has been sent to you with instructions on how to recover your password.", SweetAlertIcon.Info);

navigationManager.NavigateTo("/");

}

}