@using TradingJournal.Shared.Entities
@using TradingJournal.Web.Repositories
@inject IRepository Repository
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize(Roles = "Admin")]

<EditForm Model="Have" OnValidSubmit="OnValidSubmit">

    <DataAnnotationsValidator />

    <div class="mb-3">
        <label>Trader</label>
        <div>
            <InputNumber width="10" @bind-Value="@Have.TradersId"></InputNumber>
            <ValidationMessage For="@(() => Have.TradersId)" />
        </div>    
    </div>
    <div class="mb-3">
        <label>Strategy</label>
        <div>
            <InputNumber width="10" @bind-Value="@Have.StrategiesCode"></InputNumber>
            <ValidationMessage For="@(() => Have.StrategiesCode)" />
        </div>
    </div>

    <button class="btn btn-primary" type="submit">Save <i class="bi bi-floppy2"></i></button>


    <button class="btn btn-info" type="reset">Clean <i class="bi bi-x-octagon"></i></button>


    <button class="btn btn-secondary" @onclick="ReturnAction">Return <i class="bi bi-arrow-clockwise"></i></button>

</EditForm>

@code {


    [EditorRequired]
    [Parameter]
    public Have Have { get; set; }


    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }


    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }


}